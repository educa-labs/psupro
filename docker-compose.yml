version: '2'
services:
  db:
    image: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_DB=tuniversidad_development
      - POSTGRES_PASSWORD=tuniversidad
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.3
    container_name: elasticsearch
    environment:
      - cluster.name=psupro-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.ml.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  flask:
    build: ./scores-ms
    container_name: flask
    volumes:
      - ./flask_app:/flask_app
    ports:
      - "5000:5000"
    expose:
      - "5000"
    depends_on:
    - db
    environment:
      - FLASK_APP=main.py
      - FLASK_DEBUG=1
    command:  flask run --host=0.0.0.0 --port=5000

  api:
    build: ./api/tuniversidad
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - FLASK_URL=http://flask:5000
    command: bin/rails server --port 3000 --binding 0.0.0.0

    volumes:
      - .:/app
    expose:
      - "3000"
    depends_on:
      - db
      - elasticsearch
    links:
     - elasticsearch
     - flask
    ports:
      - "3000:3000"

  front-vue:
    container_name: front-vue
    build:
      context: ./front-vue
    volumes:
      - '.:/usr/app'
      - '/usr/app/front-vue/node_modules'
    ports:
      - '8080:8080'
    expose:
      - '8080'
    environment:
      - NODE_ENV=development
    links:
      - api

volumes:
  esdata1:
    driver: local

      
  # web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-nginx
  #   links:
  #     - api
  #   ports:
  #     - "80:80"